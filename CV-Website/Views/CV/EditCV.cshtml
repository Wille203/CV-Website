@model CV_Website.ViewModels.CVViewModel

<form asp-action="EditCV" method="post">
	<input type="hidden" asp-for="UserId" />

	<div class="form-item">
	    <h4>Uppdatera ditt CV</h4>

        <div class="f-i1">
            <h4>Färdigheter</h4>
        @if (Model.AllSkills != null && Model.AllSkills.Any())
        {
            <ul>
                @foreach (var skill in Model.AllSkills)
                {
                    <li>
                         <input type="checkbox" name="SelectedSkills" value="@skill.SkillsId" onchange= "SearchSkill(this.value, this.checked)"
                        @(Model.SelectedSkills != null && Model.SelectedSkills.Contains(skill.SkillsId) ? "checked" : "") />
                        @skill.Name
                    </li>
                }
            </ul>
        }
        </div>

        <div class="f-i2">
        <h4>Utbildning</h4>
        @if (Model.AllEducations != null && Model.AllEducations.Any())
        {
            <ul>
                @foreach (var education in Model.AllEducations)
                {
                    <li>
                            <input type="checkbox" name="SelectedEducations" value="@education.EducationId" onchange=" SearchE(this.value, this.checked)"
                        @(Model.SelectedEducations != null && Model.SelectedEducations.Contains(education.EducationId) ? "checked" : "") />
                        @education.Name
                    </li>
                }
            </ul>
        }
        </div>

        <div class="f-i3">
        <h4>Erfarenheter</h4>
        @if (Model.AllExperiences != null && Model.AllExperiences.Any())
        {
            <ul>
                @foreach (var experience in Model.AllExperiences)
                {
                    <li>
                            <input type="checkbox" name="SelectedExperiences" value="@experience.ExperienceId" onchange="SearchEx(this.value, this.checked)"
                            @(Model.SelectedExperiences != null && Model.SelectedExperiences.Contains(experience.ExperienceId) ? "checked" : "") />
                        @experience.Name
                    </li>
                }
            </ul>
        }
        </div>

        <button type="submit" class="btn btn-primary">Spara ändringar</button>
        <a href=@Url.Action("GoToUserPage", "User", new { userId = ViewBag.CurrentUserId}) class="btn btn-secondary">Avbryt</a>
    </div>
</form>

<div class="f-is1">
    <h4>Valda Färdigheter</h4>
    <ul id ="NS">
        @foreach(var si in Model.SelectedSkills)
        {
            var skill = Model.AllSkills.FirstOrDefault(s => s.SkillsId == si);
            <li id="SS2-@si">
               @skill.Name
           </li>
        }
    </ul>
    
</div>

<div class="f-is2">
    <h4>Valda Utbildning</h4>
    <ul id="NED">
        @foreach (var sed in Model.SelectedEducations)
        {
            var education = Model.AllEducations.FirstOrDefault(s => s.EducationId == sed);
            <li id="SED2-@education">
                @education.Name
            </li>
        }
    </ul>

</div>

<div class="f-is2">
    <h4>Valda Erfarenheter</h4>
    <ul id="NE">
        @foreach (var NE in Model.SelectedExperiences)
        {
            var experience = Model.AllExperiences.FirstOrDefault(s => s.ExperienceId == NE);
            <li id="SE2-@NE">
                @experience.Name
            </li>
        }
    </ul>

</div>


<script>
    function SearchSkill(Id, isChecked) {
        const selectedSkillsList = document.getElementById("NS");
        const skillName = document.querySelector(`input[value='${Id}']`).parentElement.textContent.trim();

        
        if (isChecked) {
            const newListItem = document.createElement("li");
            newListItem.textContent = skillName;
            newListItem.id = `SS2-${Id}`;
            selectedSkillsList.appendChild(newListItem);
        } else {
            
            const itemToRemove = document.getElementById(`SS2-${Id}`);
            if (itemToRemove) {
                selectedSkillsList.removeChild(itemToRemove);
            }
        }
    }

    function SearchE(Id, isChecked) {
        const selectedEducationList = document.getElementById("NED");
        const eName = document.querySelector(`input[value='${Id}']`).parentElement.textContent.trim();


        if (isChecked) {
            const newListItem = document.createElement("li");
            newListItem.textContent = eName;
            newListItem.id = `SED2-${Id}`;
            selectedEducationList.appendChild(newListItem);
        } else {

            const itemToRemove = document.getElementById(`SED2-${Id}`);
            if (itemToRemove) {
                selectedEducationList.removeChild(itemToRemove);
            }
        }
    }
    function SearchEx(Id, isChecked) {
        const selectedExList = document.getElementById("NE");
        const experienceName = document.querySelector(`input[value='${Id}']`).parentElement.textContent.trim();


        if (isChecked) {
            const newListItem = document.createElement("li");
            newListItem.textContent = experienceName;
            newListItem.id = `SE2-${Id}`;
            selectedExlist.appendChild(newListItem);
        } else {

            const itemToRemove = document.getElementById(`SE2-${Id}`);
            if (itemToRemove) {
                selectedExlist.removeChild(itemToRemove);
            }
        }
    }

</script>

